name: Handle Deployment Request

on:
  issues:
    types: [opened, edited, closed]

jobs:
  filter:
    if: ${{ contains(join(github.event.issue.labels.*.name, ','), 'Deployment Request') }}
   # if: github.event_name == 'issues' && github.event.action == 'labeled' && github.event.label.name == 'approved'
    runs-on: ubuntu-latest
    concurrency:
      group: deployment-request
      cancel-in-progress: true
    steps:
      - name: Label Check
        run: |
          echo "Deployment Request"
  validate:
    permissions:
        issues: write
    runs-on: ubuntu-latest
    needs: filter
    outputs: 
      ENVIRONMENT: ${{ env.ENVIRONMENT}}
      TARGET: ${{ env.TARGET}}
      REFERENCE: ${{ env.REFERENCE}}
      
    concurrency:
      group: deployment-request
      cancel-in-progress: true
    steps:
        - name: AWKExtraction
          id: awk_extract
          run: |
              ENVIRONMENT=$(awk '/### Target Deployment Environment/{getline; getline; print; exit}' <<< "${{ github.event.issue.body }}")
              echo "Extracted environment: $ENVIRONMENT"
              echo "ENVIRONMENT=$ENVIRONMENT" >> $GITHUB_ENV  
              TARGET=$(awk '/### Target Repository Reference/{getline; getline; print; exit}' <<< "${{ github.event.issue.body }}")
              echo "Extracted target: $TARGET"
              echo "TARGET=$TARGET" >> $GITHUB_ENV
              REFERENCE=$(awk '/### Reference Value/{getline; getline; print; exit}' <<< "${{ github.event.issue.body }}")
              echo "Extracted reference: $REFERENCE"
              echo "REFERENCE=$REFERENCE" >> $GITHUB_ENV 
        - name: Dump GitHub context
          env:
            GITHUB_CONTEXT: ${{ toJson(github.event.issue ) }}
          run: |
            echo "$GITHUB_CONTEXT" | jq .
        - name: Checkout code
          uses: actions/checkout@v4 
          with:
            ref: ${{ env.REFERENCE }}
            fetch-tags: true
        - name: Remove label from issue
          uses: actions/github-script@v7
          continue-on-error: true
          with:
            script: |
              const issueNumber = context.issue.number;
              await github.rest.issues.removeLabel({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: issueNumber,
                name: 'invalid'
              });
        - name: Add label to issue
          uses: actions/github-script@v7
          with:              
            script: |
              const issueNumber = context.issue.number;
              await github.rest.issues.addLabels({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: issueNumber,
                labels: ['valid']
              });
  deploy:
    needs: validate
    if: github.event_name == 'issues' && github.event.action == 'closed' && contains(join(github.event.issue.labels.*.name, ','), 'Deployment Request') && contains(join(github.event.issue.labels.*.name, ','), 'approved')
    permissions: write-all
    runs-on: ubuntu-latest
    
    concurrency:
      group: deployment-request
      cancel-in-progress: true
    steps:
      - name: Trigger Target Workflow
        uses: actions/github-script@v7
        env:  
          TARGET_ENVIRONMENT: ${{ needs.validate.outputs.ENVIRONMENT }}
          TARGET_REFERENCE: ${{ needs.validate.outputs.TARGET }}
          REFERENCE_VALUE: ${{ needs.validate.outputs.REFERENCE }}
        with:
          script: |
            const workflow_id = 'deploy.yml'; 
            const owner = context.repo.owner;
            const repo = context.repo.repo;
            const parameters = {
              targetEnvironment: process.env.TARGET_ENVIRONMENT,
              targetReference: process.env.TARGET_REFERENCE,
              referenceValue: process.env.REFERENCE_VALUE
            };
            
            await github.rest.actions.createWorkflowDispatch({
              owner,
              repo,
              workflow_id,
              ref: 'main', // The branch or tag name to trigger the workflow on
              inputs: parameters
            });
