name: Handle Deployment Request

on:
  issues:
    types: [opened, edited]

jobs:
  validate:
    if: ${{ contains(join(github.event.issue.labels.*.name, ','), 'Deployment Request') }}
    permissions:
        issues: write
    runs-on: ubuntu-latest
    steps:
        - name: AWK Extraction
          run: |
              ENVIRONMENT=$(awk '/### Target Deployment Environment/{getline; getline; print; exit}' <<< "${{ github.event.issue.body }}")
              echo "Extracted environment: $ENVIRONMENT"
              echo "ENVIRONMENT=$ENVIRONMENT" >> $GITHUB_ENV  
              TARGET=$(awk '/### Target Repository Reference/{getline; getline; print; exit}' <<< "${{ github.event.issue.body }}")
              echo "Extracted target: $TARGET"
              echo "TARGET=$TARGET" >> $GITHUB_ENV        
              REFERENCE=$(awk '/### Reference Value/{getline; getline; print; exit}' <<< "${{ github.event.issue.body }}")
              echo "Extracted reference: $REFERENCE"
              echo "REFERENCE=$REFERENCE" >> $GITHUB_ENV  # Setting an environment variable
        - name: Dump GitHub context
          env:
            GITHUB_CONTEXT: ${{ toJson(github.event.issue ) }}
          run: |
            echo "$GITHUB_CONTEXT" | jq .
        - name: Checkout code
          uses: actions/checkout@v4 
          with:
            ref: ${{ env.REFERENCE }}
            fetch-tags: true
        - name: Add label to issue
          uses: actions/github-script@v7
          with:
            script: |
              const issueNumber = context.issue.number;
              await github.rest.issues.removeLabels({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: issueNumber,
                labels: ['invalid']
              });
              await github.rest.issues.addLabels({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: issueNumber,
                labels: ['valid']
              });
